<section class="jumbotron text-center">
  <div class="container">
    <h1 class="jumbotron-heading">All events</h1>
    <p>
      <%= link_to "Create new event", newevent_path, class: "btn btn-primary my-2" %>
      <%= link_to "Attending events", attending_events_path, class: "btn btn-primary my-2" %>
      <%= link_to "Show my events", my_events_path, class: "btn btn-primary my-2" %>
    </p>
  </div>
</section>

<div class="container">
  <h3>Events closest to you by location</h3>
  <div id="locationDisabled">
    <div class="row justify-content-center">
      <a class="btn btn-primary my-2" id="useLocation">Use my exact location</a>
    </div>
  </div>
  <div class="album py=5 bg-light">
    <div id="closestEvents" class="row">
    </div>
  </div>
  <div class="row justify-content-center">
    <a class="btn btn-primary my-2" id="useLocation">Load more</a>
  </div>

  <h3>Other events</h3>
  <%= render 'shared/pagination' %>
  <%= render 'events/partials/event_cards' %>
</div>

<script>
  function loadCloseEvents()
  {
      getLocation(function(lat, lng) {
          document.getElementById('locationDisabled').style.display = 'none';
          request = new XMLHttpRequest();
          request.onload = function () {
              var eventsResult = JSON.parse(request.response);
              eventsResult.forEach(function (item, id) {
                  var eventShowHref = '<%= request.base_url + event_show_path('event_id') %>';
                  eventShowHref = eventShowHref.replace('/event_id', '/' + item.id);
                  var eventEditHref = '<%= request.base_url + edit_event_path('event_id') %>';
                  eventEditHref = eventEditHref.replace('/event_id', '/' + item.id);
                  getEventCardNode(
                      eventShowHref,
                      eventEditHref,
                      item.name,
                      item.attendance,
                      item.author_nick,
                      item.description,
                      item.created_time_ago,
                      false).appendTo(document.getElementById('closestEvents'));
              });
          };
          url = '<%= request.base_url + url_for(closest_events_path '1000', '1001') %>';
          url = url.replace('/1000', '/' + lat);
          url = url.replace('/1001', '/' + lng);
          request.open('GET', url);
          request.send();
      },
      function(){
          // TODO: what to do here?
          console.log('location retrieve failed.');
      });
  }

  $('document').ready(function ()
  {
    navigator.permissions.query({name:'geolocation'}).then(function(result)
    {
        if(result.state === 'granted')
        {
            document.getElementById('locationDisabled').style.display = 'none';
            loadCloseEvents();
        }
        else if(result.state === 'prompt')
        {
            document.getElementById('locationDisabled').style.display = 'block';
        }
        else if(result.state === 'denied')
        {
            document.getElementById('locationDisabled').style.display = 'none';
        }
    });
  });

  $('#useLocation').click(function(){
      loadCloseEvents();
  });
</script>